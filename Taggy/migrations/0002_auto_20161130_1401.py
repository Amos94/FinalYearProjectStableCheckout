# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-11-30 14:01
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Taggy', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='annotators',
            fields=[
                ('annotatorId', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=25)),
                ('password', models.CharField(max_length=32)),
                ('usertype', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='annotators_sets',
            fields=[
                ('setId', models.AutoField(primary_key=True, serialize=False)),
                ('annotatorId', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='categories',
            fields=[
                ('categoryId', models.AutoField(primary_key=True, serialize=False)),
                ('catName', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='chack_posts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postId', models.IntegerField()),
                ('forumId', models.IntegerField()),
                ('topicId', models.IntegerField()),
                ('creationDate', models.DateTimeField()),
                ('profileId', models.IntegerField()),
                ('authorName', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='emoticons',
            fields=[
                ('emoticonId', models.AutoField(primary_key=True, serialize=False)),
                ('canonicalForm', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='emoticons_tag',
            fields=[
                ('tagId', models.AutoField(primary_key=True, serialize=False)),
                ('emoticonId', models.IntegerField()),
                ('rawTag', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='forums',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forumId', models.IntegerField()),
                ('forumName', models.CharField(max_length=100)),
                ('forumDescription', models.CharField(max_length=250)),
                ('categoryId', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='posts',
            fields=[
                ('postId', models.AutoField(primary_key=True, serialize=False)),
                ('forumId', models.IntegerField()),
                ('topicId', models.IntegerField()),
                ('creationDate', models.DateTimeField()),
                ('profileId', models.IntegerField()),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='posts_annotators',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annotatorId', models.IntegerField()),
                ('postId', models.IntegerField()),
                ('numSentencesInPost', models.IntegerField()),
                ('comment', models.TextField()),
                ('numSentencesTagged', models.IntegerField()),
                ('lastUpdated', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='posts_emoticons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postId', models.IntegerField()),
                ('emoticonId', models.IntegerField()),
                ('tagId', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='posts_sets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('setId', models.IntegerField()),
                ('postId', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='profiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profileId', models.IntegerField()),
                ('userName', models.CharField(max_length=50)),
                ('memberSince', models.DateField()),
                ('lastLogin', models.DateField()),
                ('location', models.CharField(max_length=100)),
                ('dob', models.DateField()),
                ('occupation', models.CharField(max_length=150)),
                ('biography', models.TextField()),
                ('diagnosis', models.CharField(max_length=100)),
                ('diagnosed', models.DateField()),
                ('recurrent', models.CharField(max_length=150)),
                ('metastatic', models.CharField(max_length=10)),
                ('stage', models.CharField(max_length=10)),
                ('lymph', models.CharField(max_length=10)),
                ('posLymphNodes', models.CharField(max_length=10)),
                ('tumorSIze', models.CharField(max_length=20)),
                ('tumorGrade', models.CharField(max_length=30)),
                ('hormoneReceptor', models.CharField(max_length=100)),
                ('herStatus', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='sentences',
            fields=[
                ('sentenceId', models.AutoField(primary_key=True, serialize=False)),
                ('postId', models.IntegerField()),
                ('sentence', models.TextField()),
                ('paragraphInPost', models.IntegerField()),
                ('sentenceInParagraph', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='sentences_tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sentenceId', models.IntegerField()),
                ('tagId', models.IntegerField()),
                ('postId', models.IntegerField()),
                ('annotatorId', models.IntegerField()),
                ('timestamp', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='sets',
            fields=[
                ('setId', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=25)),
                ('description', models.TextField()),
                ('creatordId', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='signatures',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postId', models.IntegerField()),
                ('profileId', models.IntegerField()),
                ('signatures', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='tags',
            fields=[
                ('tagId', models.AutoField(primary_key=True, serialize=False)),
                ('tagName', models.CharField(max_length=4)),
                ('tagDescription', models.CharField(max_length=250)),
                ('provideOrRequest', models.CharField(max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='topics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topicId', models.IntegerField()),
                ('url', models.CharField(max_length=25)),
                ('title', models.CharField(max_length=150)),
                ('creationDate', models.DateTimeField()),
                ('profileId', models.IntegerField()),
                ('lastDate', models.DateTimeField()),
                ('numViews', models.IntegerField()),
                ('forumId', models.IntegerField()),
            ],
        ),
        migrations.DeleteModel(
            name='User',
        ),
    ]
